import React from "react";
import type { InputHTMLAttributes, ReactNode } from "react";
import type { ClassName, PropsWithSpread } from "../../types";
/**
 * The props for the Password Toggle component.
 */
export declare type Props = PropsWithSpread<{
    /**
     * The content for caution validation.
     */
    caution?: ReactNode;
    /**
     * Optional class(es) to pass to the input element.
     */
    className?: ClassName;
    /**
     * The content for error validation.
     */
    error?: ReactNode;
    /**
     * Help text to show below the field.
     */
    help?: ReactNode;
    /**
     * The id of the input.
     */
    id: string;
    /**
     * The label for the field.
     */
    label?: ReactNode;
    /**
     * Whether the field is read only.
     */
    readOnly?: boolean;
    /**
     * Whether the field is required.
     */
    required?: boolean;
    /**
     * The content for success validation.
     */
    success?: ReactNode;
    /**
     * The content for success validation.
     */
    type?: "submit" | "reset" | "button";
    /**
     * Optional class(es) to pass to the wrapping Field component
     */
    wrapperClassName?: string;
}, InputHTMLAttributes<HTMLInputElement>>;
declare const PasswordToggle: React.ForwardRefExoticComponent<{
    /**
     * The content for caution validation.
     */
    caution?: ReactNode;
    /**
     * Optional class(es) to pass to the input element.
     */
    className?: ClassName;
    /**
     * The content for error validation.
     */
    error?: ReactNode;
    /**
     * Help text to show below the field.
     */
    help?: ReactNode;
    /**
     * The id of the input.
     */
    id: string;
    /**
     * The label for the field.
     */
    label?: ReactNode;
    /**
     * Whether the field is read only.
     */
    readOnly?: boolean;
    /**
     * Whether the field is required.
     */
    required?: boolean;
    /**
     * The content for success validation.
     */
    success?: ReactNode;
    /**
     * The content for success validation.
     */
    type?: "submit" | "reset" | "button";
    /**
     * Optional class(es) to pass to the wrapping Field component
     */
    wrapperClassName?: string;
} & Omit<React.InputHTMLAttributes<HTMLInputElement>, "label" | "className" | "error" | "id" | "type" | "readOnly" | "required" | "help" | "success" | "caution" | "wrapperClassName"> & React.RefAttributes<HTMLInputElement>>;
export default PasswordToggle;
