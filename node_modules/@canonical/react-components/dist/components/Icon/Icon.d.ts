import type { HTMLProps } from "react";
import type { ClassName, PropsWithSpread, ValueOf } from "../../types";
export declare const ICONS: {
    readonly anchor: "anchor";
    readonly chevronDown: "chevron-down";
    readonly chevronUp: "chevron-up";
    readonly close: "close";
    readonly code: "code";
    readonly collapse: "collapse";
    readonly copy: "copy";
    readonly delete: "delete";
    readonly drag: "drag";
    readonly error: "error";
    readonly expand: "expand";
    readonly externalLink: "external-link";
    readonly help: "help";
    readonly information: "information";
    readonly menu: "menu";
    readonly minus: "minus";
    readonly plus: "plus";
    readonly search: "search";
    readonly share: "share";
    readonly spinner: "spinner";
    readonly success: "success";
    readonly user: "user";
    readonly warning: "warning";
    readonly facebook: "facebook";
    readonly twitter: "twitter";
    readonly instagram: "instagram";
    readonly linkedin: "linkedin";
    readonly youtube: "youtube";
    readonly github: "github";
    readonly rss: "rss";
    readonly email: "email";
};
export declare type Props = PropsWithSpread<{
    /**
     * Optional classes to add to the icon element.
     */
    className?: ClassName;
    /**
     * Whether to show the light variant of the icon.
     */
    light?: boolean;
    /**
     * The name of the icon.
     */
    name: ValueOf<typeof ICONS> | string;
}, HTMLProps<HTMLElement>>;
/**
 * Icon
 *
 * @param name One of built-in Vanilla icons or a name of a custom icon that follows `p-icon--{name}` convention.
 * @returns Icon
 */
declare const Icon: ({ className, light, name, ...props }: Props) => JSX.Element;
export default Icon;
