"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classnames = _interopRequireDefault(require("classnames"));

var _react = _interopRequireWildcard(require("react"));

var _Field = _interopRequireDefault(require("../Field"));

var _hooks = require("../../hooks");

var _excluded = ["caution", "className", "error", "grow", "help", "id", "label", "labelClassName", "onKeyUp", "required", "stacked", "style", "success", "takeFocus", "wrapperClassName"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var Textarea = function Textarea(_ref) {
  var caution = _ref.caution,
      className = _ref.className,
      error = _ref.error,
      _ref$grow = _ref.grow,
      grow = _ref$grow === void 0 ? false : _ref$grow,
      help = _ref.help,
      id = _ref.id,
      label = _ref.label,
      labelClassName = _ref.labelClassName,
      _onKeyUp = _ref.onKeyUp,
      required = _ref.required,
      stacked = _ref.stacked,
      style = _ref.style,
      success = _ref.success,
      _ref$takeFocus = _ref.takeFocus,
      takeFocus = _ref$takeFocus === void 0 ? false : _ref$takeFocus,
      wrapperClassName = _ref.wrapperClassName,
      props = _objectWithoutProperties(_ref, _excluded);

  var textareaRef = (0, _react.useRef)(null);
  var validationId = (0, _hooks.useId)();
  var helpId = (0, _hooks.useId)();
  var hasError = !!error;
  (0, _react.useEffect)(function () {
    if (takeFocus) {
      textareaRef.current.focus();
    }
  }, [takeFocus]);
  return /*#__PURE__*/_react.default.createElement(_Field.default, {
    caution: caution,
    className: wrapperClassName,
    error: error,
    forId: id,
    help: help,
    helpId: helpId,
    label: label,
    labelClassName: labelClassName,
    required: required,
    stacked: stacked,
    success: success,
    validationId: validationId
  }, /*#__PURE__*/_react.default.createElement("textarea", _extends({
    "aria-describedby": help ? helpId : null,
    "aria-errormessage": hasError ? validationId : null,
    "aria-invalid": hasError,
    className: (0, _classnames.default)("p-form-validation__input", className),
    id: id,
    onKeyUp: function onKeyUp(evt) {
      _onKeyUp && _onKeyUp(evt);

      if (grow) {
        evt.currentTarget.style.height = evt.currentTarget.scrollHeight + "px";
      }
    },
    ref: textareaRef,
    style: grow && _objectSpread({
      minHeight: "5rem",
      resize: "none",
      overflow: "hidden",
      boxSizing: "border-box"
    }, style) || style
  }, props)));
};

var _default = Textarea;
exports.default = _default;