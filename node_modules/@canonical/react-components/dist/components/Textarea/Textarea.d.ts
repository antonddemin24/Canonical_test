import type { TextareaHTMLAttributes, ReactNode } from "react";
import type { ClassName, PropsWithSpread } from "../../types";
/**
 * The props for the Textarea component.
 */
export declare type Props = PropsWithSpread<{
    /**
     * The content for caution validation.
     */
    caution?: ReactNode;
    /**
     * Optional class(es) to pass to the textarea element.
     */
    className?: ClassName;
    /**
     * The content for error validation.
     */
    error?: ReactNode;
    /**
     * Whether the textarea should grow to fit the content automatically.
     */
    grow?: boolean;
    /**
     * Help text to show below the field.
     */
    help?: ReactNode;
    /**
     * The id of the textarea.
     */
    id?: string;
    /**
     * The label for the field.
     */
    label?: ReactNode;
    /**
     * Optional class(es) to pass to the label component.
     */
    labelClassName?: string;
    /**
     * Whether the field is required.
     */
    required?: boolean;
    /**
     * Whether the form field should have a stacked appearance.
     */
    stacked?: boolean;
    /**
     * The content for success validation.
     */
    success?: ReactNode;
    /**
     * Whether to focus on the input on initial render.
     */
    takeFocus?: boolean;
    /**
     * Optional class(es) to pass to the wrapping Field component
     */
    wrapperClassName?: string;
}, TextareaHTMLAttributes<HTMLTextAreaElement>>;
declare const Textarea: ({ caution, className, error, grow, help, id, label, labelClassName, onKeyUp, required, stacked, style, success, takeFocus, wrapperClassName, ...props }: Props) => JSX.Element;
export default Textarea;
