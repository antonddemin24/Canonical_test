import type { ButtonHTMLAttributes, ReactNode } from "react";
import type { ButtonProps } from "../Button";
import type { ClassName, PropsWithSpread } from "../../types";
export declare const LOADER_MIN_DURATION = 400;
export declare const SUCCESS_DURATION = 2000;
export declare type Props = PropsWithSpread<{
    /**
     * The appearance of the button.
     */
    appearance?: ButtonProps["appearance"];
    /**
     * The content of the button.
     */
    children?: ReactNode;
    /**
     * Optional class(es) to pass to the button element.
     */
    className?: ClassName;
    /**
     * Whether the button should be disabled.
     */
    disabled?: boolean;
    /**
     * Whether the button should display inline.
     */
    inline?: boolean;
    /**
     * Whether the button should be in the loading state.
     */
    loading?: boolean;
    /**
     * Whether the button should be in the success state.
     */
    success?: boolean;
}, ButtonHTMLAttributes<HTMLButtonElement>>;
declare const ActionButton: ({ appearance, children, className, disabled, inline, loading, success, ...buttonProps }: Props) => JSX.Element;
export default ActionButton;
