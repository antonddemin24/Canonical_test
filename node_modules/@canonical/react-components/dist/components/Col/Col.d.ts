import type { ElementType, HTMLProps, ReactNode } from "react";
import type { ClassName, PropsWithSpread } from "../../types";
export declare type ColSize = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;
export declare const colSizes: ColSize[];
export declare type Props = PropsWithSpread<{
    /**
     * The content of the column.
     */
    children?: ReactNode;
    /**
     * Optional class(es) to pass to the wrapping element.
     */
    className?: ClassName;
    /**
     * Optional element type to give the wrapper if not "div".
     */
    element?: ElementType;
    /**
     * The number of columns to skip before starting on large screens.
     */
    emptyLarge?: ColSize;
    /**
     * The number of columns to skip before starting on medium screens.
     */
    emptyMedium?: ColSize;
    /**
     * The number of columns to skip before starting on small screens.
     */
    emptySmall?: ColSize;
    /**
     * Override for the number of columns the content occupies on large screens.
     */
    large?: ColSize;
    /**
     * Override for the number of columns the content occupies on medium screens.
     */
    medium?: ColSize;
    /**
     * The number of columns the content occupies.
     */
    size: ColSize;
    /**
     * Override for the number of columns the content occupies on small screens.
     */
    small?: ColSize;
}, HTMLProps<HTMLElement>>;
declare const Col: ({ children, className, element: Component, emptyLarge, emptyMedium, emptySmall, large, medium, size, small, ...props }: Props) => JSX.Element;
export default Col;
