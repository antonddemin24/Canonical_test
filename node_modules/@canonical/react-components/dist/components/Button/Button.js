"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.ButtonAppearance = void 0;

var _classnames = _interopRequireDefault(require("classnames"));

var _react = _interopRequireDefault(require("react"));

var _excluded = ["appearance", "children", "className", "dense", "disabled", "element", "hasIcon", "inline", "onClick", "small"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var ButtonAppearance = {
  BASE: "base",
  BRAND: "brand",
  DEFAULT: "",
  LINK: "link",
  NEGATIVE: "negative",
  POSITIVE: "positive"
};
/**
 * The type of the Button props.
 * @template P - The type of the props if providing a component to `element`
 */

exports.ButtonAppearance = ButtonAppearance;

/**
 * A component for the Vanilla button.
 * @template P - The type of the props if providing a component to `element`
 */
var Button = function Button(_ref) {
  var appearance = _ref.appearance,
      children = _ref.children,
      className = _ref.className,
      dense = _ref.dense,
      disabled = _ref.disabled,
      _ref$element = _ref.element,
      Component = _ref$element === void 0 ? "button" : _ref$element,
      hasIcon = _ref.hasIcon,
      inline = _ref.inline,
      onClick = _ref.onClick,
      small = _ref.small,
      buttonProps = _objectWithoutProperties(_ref, _excluded);

  var classes = (0, _classnames.default)(appearance ? "p-button--".concat(appearance) : "p-button", {
    "has-icon": hasIcon,
    "is-dense": dense,
    "is-disabled": Component !== "button" && disabled,
    "is-inline": inline,
    "is-small": small
  }, className);

  var onClickDisabled = function onClickDisabled(e) {
    return e.preventDefault();
  };

  var disabledProp = Component === "button" ? {
    disabled: disabled
  } : {
    "aria-disabled": disabled
  };
  return /*#__PURE__*/_react.default.createElement(Component, _extends({
    className: classes,
    onClick: disabled ? onClickDisabled : onClick
  }, disabledProp, buttonProps), children);
};

var _default = Button;
exports.default = _default;