import { ReactNode, HTMLProps } from "react";
import { TableCellProps, TableHeaderProps, TableRowProps } from "react-table";
import type { Column, UseTableOptions, Cell, Row, HeaderGroup } from "react-table";
import { PropsWithSpread } from "../../types";
export declare type Props<D extends Record<string, unknown>> = PropsWithSpread<{
    /**
     * The columns of the table.
     */
    columns: Column<D>[];
    /**
     * The data of the table.
     */
    data: D[];
    /**
     * A message to display if data is empty.
     */
    emptyMsg?: string;
    /**
     * Optional extra row to display underneath the main table content.
     */
    footer?: ReactNode;
    /**
     * This function is used to resolve any props needed for a particular column's header cell.
     */
    getHeaderProps?: (header: HeaderGroup<D>) => Partial<TableHeaderProps & HTMLProps<HTMLTableHeaderCellElement>>;
    /**
     * This function is used to resolve any props needed for a particular row.
     */
    getRowProps?: (row: Row<D>) => Partial<TableRowProps & HTMLProps<HTMLTableRowElement>>;
    /**
     * This function is used to resolve any props needed for a particular cell.
     */
    getCellProps?: (cell: Cell<D>) => Partial<TableCellProps & HTMLProps<HTMLTableCellElement>>;
    getRowId?: UseTableOptions<D>["getRowId"];
}, HTMLProps<HTMLTableElement>>;
declare function ModularTable({ data, columns, emptyMsg, footer, getHeaderProps, getRowProps, getCellProps, getRowId, ...props }: Props<Record<string, unknown>>): JSX.Element;
export default ModularTable;
