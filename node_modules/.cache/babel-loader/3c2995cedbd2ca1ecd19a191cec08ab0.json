{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useId = void 0;\n\nvar _react = require(\"react\");\n\nvar _nanoid = require(\"nanoid\");\n/**\n * A hook that returns the same random ID string on every render.\n * Can be used as a value for HTML \"id\" attributes.\n * @returns random ID string\n */\n\n\nvar useId = function useId() {\n  return (0, _react.useRef)((0, _nanoid.nanoid)()).current;\n};\n\nexports.useId = useId;","map":{"version":3,"names":["Object","defineProperty","exports","value","useId","_react","require","_nanoid","useRef","nanoid","current"],"sources":["/Users/antondemin/ReactProjects/Canonical_test/canonical_test/node_modules/@canonical/react-components/dist/hooks/useId.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useId = void 0;\n\nvar _react = require(\"react\");\n\nvar _nanoid = require(\"nanoid\");\n\n/**\n * A hook that returns the same random ID string on every render.\n * Can be used as a value for HTML \"id\" attributes.\n * @returns random ID string\n */\nvar useId = function useId() {\n  return (0, _react.useRef)((0, _nanoid.nanoid)()).current;\n};\n\nexports.useId = useId;"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,KAAR,GAAgB,KAAK,CAArB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIC,OAAO,GAAGD,OAAO,CAAC,QAAD,CAArB;AAEA;AACA;AACA;AACA;AACA;;;AACA,IAAIF,KAAK,GAAG,SAASA,KAAT,GAAiB;EAC3B,OAAO,CAAC,GAAGC,MAAM,CAACG,MAAX,EAAmB,CAAC,GAAGD,OAAO,CAACE,MAAZ,GAAnB,EAA0CC,OAAjD;AACD,CAFD;;AAIAR,OAAO,CAACE,KAAR,GAAgBA,KAAhB"},"metadata":{},"sourceType":"script"}