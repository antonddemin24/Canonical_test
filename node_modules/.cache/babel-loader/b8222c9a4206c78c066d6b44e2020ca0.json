{"ast":null,"code":"const getResource = async () => {\n  const res = await fetch('https://people.canonical.com/~anthonydillon/wp-json/wp/v2/posts.json');\n  const data = await res.json();\n  return data;\n};\n\nexport const allCards = async () => {\n  const result = await getResource();\n  let cards = [];\n\n  for (const item in result) {\n    const b = result[item];\n    let card = [];\n    card.push(b['title']['rendered'], b['_embedded']['author'][0]['name']);\n    cards.push(card);\n  }\n\n  console.log(cards);\n  return result;\n};\nexport default class cardService {\n  constructor() {\n    this.getResource = async () => {\n      const res = await fetch('https://people.canonical.com/~anthonydillon/wp-json/wp/v2/posts.json');\n\n      if (!res.ok) {\n        throw new Error(`Could not fetch url` + `, received ${res.status}`);\n      }\n\n      return await res.json();\n    };\n\n    this.getAllCards = async () => {\n      const res = await this.getResource();\n      console.log(res.map); //return res.map(this._transformCharacter);\n    };\n\n    this.isSet = data => {\n      return data ? data : 'no information';\n    };\n\n    this._extractId = item => {\n      const idRegExp = /\\/([0-9]*)$/;\n      return item.url.match(idRegExp)[1];\n    };\n\n    this._transformCharacter = res => {\n      const cards = Object.entries(res);\n      return {//title : this.isSet(card['title'][0][0]),\n      };\n    };\n  }\n\n}","map":{"version":3,"names":["getResource","res","fetch","data","json","allCards","result","cards","item","b","card","push","console","log","cardService","ok","Error","status","getAllCards","map","isSet","_extractId","idRegExp","url","match","_transformCharacter","Object","entries"],"sources":["/Users/antondemin/ReactProjects/Canonical_test/canonical_test/src/services/cardService.tsx"],"sourcesContent":["interface Card {\n    title : string;\n    author : string;\n    type : string;\n    category : string;\n    day : number;\n    month : number;\n    year : number;\n}\n\ninterface Cards {\n    arrayName : Card[];\n}\n\nconst getResource =async () => {\n    const res = await fetch('https://people.canonical.com/~anthonydillon/wp-json/wp/v2/posts.json');\n    const  data  = await res.json();\n    return data;\n}\n\nexport const allCards = async(): Promise<Array<Card> | string> => {\n    const result = await getResource();\n    let cards : Cards[] = [];\n    \n    for (const item in result) {\n        const b = result[item]\n        let card : Card[] = [];\n        card.push(b['title']['rendered'], b['_embedded']['author'][0]['name']);\n        cards.push(card);\n        \n    }\n    console.log(cards);\n    return result;\n}\n\nexport default class cardService{\n    \n\n\n\n    getResource = async () => {\n        const res = await fetch('https://people.canonical.com/~anthonydillon/wp-json/wp/v2/posts.json');\n\n        if (!res.ok) {\n            throw new Error(`Could not fetch url` + `, received ${res.status}`);\n        }\n        return await res.json();\n    }\n\n    getAllCards = async () => {\n        const res = await this.getResource();\n        console.log(res.map)\n        //return res.map(this._transformCharacter);\n    }\n\n    isSet = (data: any) =>{\n        return (data) ? data : 'no information';\n    }\n\n    _extractId = (item: any) => {\n        const idRegExp = /\\/([0-9]*)$/;\n        return item.url.match(idRegExp)[1];\n    }\n\n    _transformCharacter = (res: string) => {\n        const cards = Object.entries(res);\n\n        return {\n            //title : this.isSet(card['title'][0][0]),\n            \n            \n        };\n    }\n}"],"mappings":"AAcA,MAAMA,WAAW,GAAE,YAAY;EAC3B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,sEAAD,CAAvB;EACA,MAAOC,IAAI,GAAI,MAAMF,GAAG,CAACG,IAAJ,EAArB;EACA,OAAOD,IAAP;AACH,CAJD;;AAMA,OAAO,MAAME,QAAQ,GAAG,YAA0C;EAC9D,MAAMC,MAAM,GAAG,MAAMN,WAAW,EAAhC;EACA,IAAIO,KAAe,GAAG,EAAtB;;EAEA,KAAK,MAAMC,IAAX,IAAmBF,MAAnB,EAA2B;IACvB,MAAMG,CAAC,GAAGH,MAAM,CAACE,IAAD,CAAhB;IACA,IAAIE,IAAa,GAAG,EAApB;IACAA,IAAI,CAACC,IAAL,CAAUF,CAAC,CAAC,OAAD,CAAD,CAAW,UAAX,CAAV,EAAkCA,CAAC,CAAC,WAAD,CAAD,CAAe,QAAf,EAAyB,CAAzB,EAA4B,MAA5B,CAAlC;IACAF,KAAK,CAACI,IAAN,CAAWD,IAAX;EAEH;;EACDE,OAAO,CAACC,GAAR,CAAYN,KAAZ;EACA,OAAOD,MAAP;AACH,CAbM;AAeP,eAAe,MAAMQ,WAAN,CAAiB;EAAA;IAAA,KAK5Bd,WAL4B,GAKd,YAAY;MACtB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,sEAAD,CAAvB;;MAEA,IAAI,CAACD,GAAG,CAACc,EAAT,EAAa;QACT,MAAM,IAAIC,KAAJ,CAAW,qBAAD,GAAyB,cAAaf,GAAG,CAACgB,MAAO,EAA3D,CAAN;MACH;;MACD,OAAO,MAAMhB,GAAG,CAACG,IAAJ,EAAb;IACH,CAZ2B;;IAAA,KAc5Bc,WAd4B,GAcd,YAAY;MACtB,MAAMjB,GAAG,GAAG,MAAM,KAAKD,WAAL,EAAlB;MACAY,OAAO,CAACC,GAAR,CAAYZ,GAAG,CAACkB,GAAhB,EAFsB,CAGtB;IACH,CAlB2B;;IAAA,KAoB5BC,KApB4B,GAoBnBjB,IAAD,IAAc;MAClB,OAAQA,IAAD,GAASA,IAAT,GAAgB,gBAAvB;IACH,CAtB2B;;IAAA,KAwB5BkB,UAxB4B,GAwBdb,IAAD,IAAe;MACxB,MAAMc,QAAQ,GAAG,aAAjB;MACA,OAAOd,IAAI,CAACe,GAAL,CAASC,KAAT,CAAeF,QAAf,EAAyB,CAAzB,CAAP;IACH,CA3B2B;;IAAA,KA6B5BG,mBA7B4B,GA6BLxB,GAAD,IAAiB;MACnC,MAAMM,KAAK,GAAGmB,MAAM,CAACC,OAAP,CAAe1B,GAAf,CAAd;MAEA,OAAO,CACH;MADG,CAAP;IAKH,CArC2B;EAAA;;AAAA"},"metadata":{},"sourceType":"module"}